<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Change Password</title>
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;600&display=swap" rel="stylesheet" />
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <style>
    body {
      font-family: 'Poppins', sans-serif;
      background: #f8f9fa;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
    }
    .password-container {
      background: #fff;
      border-radius: 8px;
      box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
      max-width: 400px;
      padding: 30px;
      width: 100%;
    }
    .password-container h3 {
      font-weight: 600;
      margin-bottom: 20px;
      color: #333;
    }
    .form-group {
      margin-bottom: 15px;
    }
    .btn-primary {
      background: #007bff;
      border: none;
      font-weight: 500;
    }
    .text-muted {
      font-size: 14px;
    }
  </style>
</head>
<body>
  <div class="password-container">
    <h3>Create New Password</h3>
    <form id="changePasswordForm" action="/reset-profile-password" method="post" onsubmit="return validatePasswordForm()">
      <div class="form-group">
        <label for="newPassword" class="form-label">New Password</label>
        <input 
          type="password" 
          id="newPassword" 
          name="newPassword" 
          class="form-control" 
          placeholder="Enter new password" 
          required 
          
        />
        <span class="toggle-password" data-target="password">
          <i class="fas fa-eye"></i>
        </span>
        <div id="error1" class="error-message"></div>
        <!-- <small class="text-muted" id="passwordHelp">
          Must be 8-32 characters, include a number, an uppercase letter, and a special character.
        </small> -->
      </div>
      <div class="form-group">
        <label for="confirmPassword" class="form-label">Confirm Password</label>
        <input 
          type="password" 
          id="confirmPassword" 
          name="confirmPassword" 
          class="form-control" 
          placeholder="Re-enter new password" 
          required 
        />
        <span class="toggle-password" data-target="confirmPassword">
          <i class="fas fa-eye"></i>
        </span>
        <div id="error2" class="error-message"></div>
      </div>
      <%if(locals.message && message.length>0){%>
        <div class="alert alert-danger text-center">
            <%=message%>
        </div>
    <%}%>
      <button type="submit" class="btn btn-primary w-100">Update Password</button>
    </form>
    <div class="text-muted text-center mt-3">
      Remembered your password? <a href="/login" class="text-decoration-none">Login here</a>
    </div>
  </div>

  <script>
    // Validate password form
    function validatePasswordForm() {
       
      const newPassword = document.getElementById('newPassword').value;
      const confirmPassword = document.getElementById('confirmPassword').value;

      const error1 = document.getElementById('error1');
        const error2 = document.getElementById('error2');

            const alpha = /[a-zA-Z]/;
            const digit = /\d/;

            if(newPassword.length<8){
                error1.style.display="block";
                error1.innerHTML = "Should contain at least 8 characters";
            }else if(!alpha.test(newPassword) || !digit.test(newPassword)){
                error1.style.display="block";
                error1.innerHTML = "Should contain at least one alphabet and one digit";
            }else{
                error1.style.display="none";
                error1.innerHTML="";
            }

            if(newPassword!==confirmPassword){
                error2.style.display="block";
                error2.innerHTML = "Password do not match";
            }else{
                error2.style.display="none";
                error2.innerHTML="";
            }
        }

        document.addEventListener('DOMContentLoaded', () => {
      const togglePasswordIcons = document.querySelectorAll('.toggle-password');

      togglePasswordIcons.forEach(icon => {
        const iconElement = icon.querySelector('i');
        iconElement.classList.remove('fa-eye');
        iconElement.classList.add('fa-eye-slash');

        icon.addEventListener('click', function () {
          const targetInput = document.getElementById(this.dataset.target);

          if (targetInput.type === 'password') {
        targetInput.type = 'text';
        iconElement.classList.remove('fa-eye-slash');
        iconElement.classList.add('fa-eye');
          } else {
        targetInput.type = 'password';
        iconElement.classList.remove('fa-eye');
        iconElement.classList.add('fa-eye-slash');
          }
        });
      });
    });
    

      // Password strength validation regex
    //   const passwordRegex = /^(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,32}$/;

    //   if (!passwordRegex.test(newPassword)) {
    //     Swal.fire({
    //       icon: 'error',
    //       title: 'Weak Password',
    //       text: 'Password must be 8-32 characters long, include a number, an uppercase letter, and a special character.',
    //     });
    //     return false;
    //   }

    //   if (newPassword !== confirmPassword) {
    //     Swal.fire({
    //       icon: 'error',
    //       title: 'Password Mismatch',
    //       text: 'The passwords do not match. Please try again.',
    //     });
    //     return false;
    //   }

    //   return true;
    
  </script>
</body>
</html>
